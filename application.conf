# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret = "^<csmm5Fx4d=r2HEX8pelM3iBkFVv?k[mc;IZE<_Qoq8EkX_/7@Zt6dP05Pzea3U"
play.crypto.secret = ${?APPLICATION_SECRET} # from upstream
play.crypto.secret = ${?KM_PLAY_CRYPTO_SECRET} # deprecated

# The application languages
# ~~~~~
play.i18n.langs=["en"]

play.http.requestHandler = "play.http.DefaultHttpRequestHandler"
play.http.context = "/"
play.application.loader = loader.KafkaManagerLoader

#play.filters.https.redirectEnabled = true
#play.filters.enabled += play.filters.https.RedirectHttpsFilter

kafka-manager.zkhosts = "localhost:2181"
kafka-manager.zkhosts = ${?ZK_HOSTS}

pinned-dispatcher.type = "PinnedDispatcher"
pinned-dispatcher.executor = "thread-pool-executor"
application.features = ["KMClusterManagerFeature","KMTopicManagerFeature","KMPreferredReplicaElectionFeature","KMReassignPartitionsFeature"]

akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
}

akka.logger-startup-timeout = 60s

basicAuthentication.enabled = false
basicAuthentication.enabled = ${?KAFKA_MANAGER_AUTH_ENABLED}
basicAuthentication.username = "admin"
basicAuthentication.username = ${?KAFKA_MANAGER_USERNAME} # from upstream
basicAuthentication.username = ${?KM_BASICAUTHENTICATION_USERNAME} # deprecated
basicAuthentication.password = "admin"
basicAuthentication.password = ${?KAFKA_MANAGER_PASSWORD} # from upstream
basicAuthentication.password = ${?KM_BASICAUTHENTICATION_PASSWORD} # deprecated
basicAuthentication.realm = "Kafka-Manager"
basicAuthentication.excluded = ["/api/health"] # ping the health of your instance without authentication

kafka-manager.consumer.properties.file = ${?CONSUMER_PROPERTIES_FILE} # from upstream
kafka-manager.consumer.properties.file = ${?KM_CONSUMER_PROPERTIES_FILE} # deprecated

kafka-manager.features {
  # To disable, pass -Dkafka-manager.features.topic-manager=
  topic-manager = "KMTopicManagerFeature"
  # To disable, pass -Dkafka-manager.features.preferred-replica-election=
  preferred-replica-election = "KMPreferredReplicaElectionFeature"
  # To disable, pass -Dkafka-manager.features.reassign-partitions=
  reassign-partitions = "KMReassignPartitionsFeature"
  # To disable, pass -Dkafka-manager.features.cluster-manager=
  cluster-manager = "KMClusterManagerFeature"
}

application.features = [
  ${kafka-manager.features.topic-manager}
  ${kafka-manager.features.preferred-replica-election}
  ${kafka-manager.features.reassign-partitions}
  ${kafka-manager.features.cluster-manager}
]
